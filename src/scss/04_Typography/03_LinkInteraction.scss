/* a タグの下線
--------------------------------------------------------------------------------------*/
/* 記事の外では 下線なし -> hover -> 下線あり */
/* //_{#ie6-win */
a, /* link の無い a には下線をつけない */
/* //_}#ie6-win */
:link, :visited { text-decoration : none; }

a {
    @include active-focus-pseudo-class {
        text-decoration : none;
    }
}

:link:hover, :visited:hover { text-decoration : underline; }

@if( $ACTIVE_BEHAVES_LIKE_FOCUS ){
    a:active:hover { text-decoration : underline; }
} @else if( $CANUSE_ACTIVE_PSEUDO_CLASS ){
    a:active { text-decoration : underline; }
}
@if( $CANUSE_FOCUS_PSEUDO_CLASS ){
    a:focus:hover { text-decoration : underline; }
}

/*  transition
--------------------------------------------------------------------------------------*/
@if( $UA_Modern ){
    :link, :visited {
        background-color : transparent;
    }
    :link, :link *,
    :visited, :visited * {
        @include animate-colors;
    }
}

/* a タグの色
--------------------------------------------------------------------------------------*/
a {
    color        : $COLOR_Light_casual_text;
    border-color : $COLOR_Light_fill;
}
:link          {
    color        : $COLOR_Light_link;
}
:visited       {
    color        : $COLOR_Light_text;
}
:link:hover    {
    color        : $COLOR_Light_hover;
    border-color : $COLOR_Light_hover;
}
:visited:hover {
    color        : $COLOR_Light_visited_hover;
    border-color : $COLOR_Light_visited_hover;
}

@if( $TEXT_COLOR_CANT_CHANGE_FOCUSING == false ){
    .ribbon {
        a              {
            color        : $COLOR_Ribbon_casual_text;
            border-color : $COLOR_Ribbon_fill;
        }
        :link          {
            color        : $COLOR_Ribbon_link;
        }
        :visited       {
            color        : $COLOR_Ribbon_text;
        }
        :link:hover    {
            color        : $COLOR_Ribbon_hover;
            border-color : $COLOR_Ribbon_hover;
        }
        :visited:hover {
            color        : $COLOR_Ribbon_visited_hover;
            border-color : $COLOR_Ribbon_visited_hover;
        }
    }
}

/* :active, :focus 時の配色は同じ
--------------------------------------------------------------------------------------*/
@if( $FOCUSED_COLOR_IS_SYSTEM_COLOR ){
    a:active {
        background-color : $COLOR_ACCENT !important;
        color            : #fff        !important;

        & * {
            color : #fff !important;
        }
    }
    a:focus {
        background-color : Highlight !important;
        & * {
            color : HighlightText !important;
        }
        .ribbon & {
            outline  : HighlightText solid $FORCED_COLORS_FOCUS_BORDER_WIDTH;
        }
    }
} @else if( $TEXT_COLOR_CANT_CHANGE_FOCUSING ){
    a:focus {
        background-color : $COLOR_Sidebar_fill !important;
    }
} @else {
    a {
        @include active-focus-pseudo-class {
            background-color : $COLOR_ACCENT !important;
            color            : #fff        !important;
    
            & * {
                color : #fff !important;
            }
        }
    }
}

/* :target
--------------------------------------------------------------------------------------*/
@if( $CANUSE_TARGET_PSEUDO_CLASS ){
    :target, :target * {
        background   : $COLOR_ACCENT !important;
        color        : #fff  !important;
        border-color : #fff  !important;
    }
}


/*  Dark theme
--------------------------------------------------------------------------------------*/
@include media(dark_theme) {
    a {
        color        : $COLOR_Dark_casual_text;
        border-color : $COLOR_Dark_fill;
    }
    :link          {
        color        : $COLOR_Dark_link;
        
    }
    :visited       {
        color        : $COLOR_Dark_text;
    }
    :link:hover    {
        color        : $COLOR_Dark_hover;
        border-color : $COLOR_Dark_hover;
    }
    :visited:hover {
        color        : $COLOR_Dark_visited_hover;
        border-color : $COLOR_Dark_visited_hover;
    }
}

/*  Forced colors
--------------------------------------------------------------------------------------*/
@include media(forced_colors_native_or_fallback){
    a {
        @include active-focus-pseudo-class {
            outline : $FORCED_COLORS_FOCUS_BORDER_WIDTH solid;
        }
    }
}

/*  Print
--------------------------------------------------------------------------------------*/
@include media(print) {
    a       , .ribbon a        { color : $COLOR_Print_casual_text; }
    :link   , .ribbon :link    { color : $COLOR_Print_link; }
    :visited, .ribbon :visited { color : $COLOR_Print_visited; }
}
